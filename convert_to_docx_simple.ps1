# Script simple para convertir archivos Markdown a DOCX
# Usando herramientas online y m√©todos alternativos

Write-Host "üîÑ Iniciando conversi√≥n de archivos Markdown a DOCX..." -ForegroundColor Green

# Directorios
$sourceDir = "docs\manuales"
$outputDir = "docs\manuales\docx"

# Crear directorio de salida
if (!(Test-Path $outputDir)) {
    New-Item -ItemType Directory -Path $outputDir -Force
    Write-Host "üìÅ Directorio creado: $outputDir" -ForegroundColor Blue
}

# Lista de archivos
$files = @(
    "AJUSTES_MEJORAS_SISTEMA.md",
    "CHANGELOG.md", 
    "COMENTARIOS_README_CODIGO.md",
    "DIAGRAMAS_UML_TECNICOS.md",
    "EVIDENCIA_INTEGRACION_MODULOS.md",
    "GUIA_INSTALACION_COMPLETA.md",
    "INFORME_CONTROL_AVANCES.md",
    "MANUAL_DESARROLLADOR_ARQUITECTURA.md",
    "PRUEBAS_INTERNAS.md"
)

Write-Host "`nüìã Archivos encontrados en $sourceDir:" -ForegroundColor Cyan
foreach ($file in $files) {
    $filePath = Join-Path $sourceDir $file
    if (Test-Path $filePath) {
        $fileSize = (Get-Item $filePath).Length
        $fileSizeKB = [math]::Round($fileSize / 1KB, 2)
        Write-Host "  ‚úÖ $file ($fileSizeKB KB)" -ForegroundColor Green
    } else {
        Write-Host "  ‚ùå $file (no encontrado)" -ForegroundColor Red
    }
}

Write-Host "`nüí° Opciones para convertir a DOCX:" -ForegroundColor Yellow
Write-Host "`n1Ô∏è‚É£  M√âTODO RECOMENDADO - Pandoc (requiere instalaci√≥n):" -ForegroundColor Green
Write-Host "   ‚Ä¢ Instalar pandoc desde: https://pandoc.org/installing.html" -ForegroundColor White
Write-Host "   ‚Ä¢ Ejecutar: .\convert_to_docx.ps1" -ForegroundColor White

Write-Host "`n2Ô∏è‚É£  M√âTODO ALTERNATIVO - Python (requiere instalaci√≥n):" -ForegroundColor Green
Write-Host "   ‚Ä¢ Instalar Python desde: https://www.python.org/downloads/" -ForegroundColor White
Write-Host "   ‚Ä¢ Ejecutar: pip install python-docx markdown" -ForegroundColor White
Write-Host "   ‚Ä¢ Ejecutar: .\convert_to_docx_alternative.ps1" -ForegroundColor White

Write-Host "`n3Ô∏è‚É£  M√âTODO ONLINE - Herramientas web:" -ForegroundColor Green
Write-Host "   ‚Ä¢ https://pandoc.org/try/ (recomendado)" -ForegroundColor White
Write-Host "   ‚Ä¢ https://www.markdowntoword.com/" -ForegroundColor White
Write-Host "   ‚Ä¢ https://word-to-markdown.herokuapp.com/" -ForegroundColor White

Write-Host "`n4Ô∏è‚É£  M√âTODO MANUAL - Microsoft Word:" -ForegroundColor Green
Write-Host "   ‚Ä¢ Abrir cada archivo .md en un editor de texto" -ForegroundColor White
Write-Host "   ‚Ä¢ Copiar el contenido" -ForegroundColor White
Write-Host "   ‚Ä¢ Pegar en Microsoft Word" -ForegroundColor White
Write-Host "   ‚Ä¢ Guardar como .docx" -ForegroundColor White

# Crear archivo de instrucciones detalladas
$instructions = @"
# üìã Instrucciones para Convertir Archivos Markdown a DOCX

## üéØ Objetivo
Convertir todos los archivos de documentaci√≥n t√©cnica de formato Markdown (.md) a Microsoft Word (.docx).

## üìÅ Archivos a Convertir
- AJUSTES_MEJORAS_SISTEMA.md
- CHANGELOG.md
- COMENTARIOS_README_CODIGO.md
- DIAGRAMAS_UML_TECNICOS.md
- EVIDENCIA_INTEGRACION_MODULOS.md
- GUIA_INSTALACION_COMPLETA.md
- INFORME_CONTROL_AVANCES.md
- MANUAL_DESARROLLADOR_ARQUITECTURA.md
- PRUEBAS_INTERNAS.md

## üõ†Ô∏è M√©todos de Conversi√≥n

### M√©todo 1: Pandoc (Recomendado)
1. Instalar pandoc desde: https://pandoc.org/installing.html
2. Ejecutar: .\convert_to_docx.ps1
3. Los archivos se guardar√°n en: docs\manuales\docx\

### M√©todo 2: Python
1. Instalar Python desde: https://www.python.org/downloads/
2. Instalar dependencias: pip install python-docx markdown
3. Ejecutar: .\convert_to_docx_alternative.ps1

### M√©todo 3: Online (Pandoc Try)
1. Ir a: https://pandoc.org/try/
2. Seleccionar "From: markdown" y "To: docx"
3. Copiar el contenido de cada archivo .md
4. Pegar en el editor online
5. Descargar el archivo .docx resultante

### M√©todo 4: Manual con Word
1. Abrir cada archivo .md en un editor de texto
2. Copiar todo el contenido
3. Abrir Microsoft Word
4. Pegar el contenido
5. Aplicar formato (t√≠tulos, listas, etc.)
6. Guardar como .docx

## üìä Resultado Esperado
- 9 archivos .docx en la carpeta docs\manuales\docx\
- Formato profesional con t√≠tulos, listas y tablas
- Compatible con Microsoft Word
- Listo para presentaciones o impresi√≥n

## üîß Soluci√≥n de Problemas

### Error: "pandoc no se reconoce como comando"
- Instalar pandoc y reiniciar la terminal
- Verificar que pandoc est√© en el PATH del sistema

### Error: "python no se reconoce como comando"
- Instalar Python y marcar "Add to PATH" durante la instalaci√≥n
- Reiniciar la terminal despu√©s de la instalaci√≥n

### Error: "pip no se reconoce como comando"
- Usar: python -m pip install python-docx markdown
- O instalar pip por separado

## üìû Soporte
Si tienes problemas con la conversi√≥n, contacta al equipo de desarrollo:
- Joaqu√≠n Mar√≠n (Frontend)
- Benjamin Vilches (Backend)
"@

$instructions | Out-File -FilePath "INSTRUCCIONES_CONVERSION_DOCX.md" -Encoding UTF8

Write-Host "`nüìù Archivo de instrucciones creado: INSTRUCCIONES_CONVERSION_DOCX.md" -ForegroundColor Blue

# Crear script de verificaci√≥n
$verificationScript = @"
# Script de verificaci√≥n de archivos convertidos
Write-Host "üîç Verificando archivos convertidos..." -ForegroundColor Green

`$outputDir = "docs\manuales\docx"
`$expectedFiles = @(
    "AJUSTES_MEJORAS_SISTEMA.docx",
    "CHANGELOG.docx",
    "COMENTARIOS_README_CODIGO.docx",
    "DIAGRAMAS_UML_TECNICOS.docx",
    "EVIDENCIA_INTEGRACION_MODULOS.docx",
    "GUIA_INSTALACION_COMPLETA.docx",
    "INFORME_CONTROL_AVANCES.docx",
    "MANUAL_DESARROLLADOR_ARQUITECTURA.docx",
    "PRUEBAS_INTERNAS.docx"
)

`$foundCount = 0
`$totalSize = 0

foreach (`$file in `$expectedFiles) {
    `$filePath = Join-Path `$outputDir `$file
    if (Test-Path `$filePath) {
        `$fileSize = (Get-Item `$filePath).Length
        `$fileSizeKB = [math]::Round(`$fileSize / 1KB, 2)
        `$totalSize += `$fileSize
        Write-Host "  ‚úÖ `$file (`$fileSizeKB KB)" -ForegroundColor Green
        `$foundCount++
    } else {
        Write-Host "  ‚ùå `$file (no encontrado)" -ForegroundColor Red
    }
}

`$totalSizeMB = [math]::Round(`$totalSize / 1MB, 2)
Write-Host "`nüìä Resumen:" -ForegroundColor Cyan
Write-Host "  Archivos encontrados: `$foundCount/`$(`$expectedFiles.Count)" -ForegroundColor White
Write-Host "  Tama√±o total: `$totalSizeMB MB" -ForegroundColor White

if (`$foundCount -eq `$expectedFiles.Count) {
    Write-Host "`nüéâ ¬°Todos los archivos convertidos exitosamente!" -ForegroundColor Green
} else {
    Write-Host "`n‚ö†Ô∏è  Faltan algunos archivos por convertir" -ForegroundColor Yellow
}
"@

$verificationScript | Out-File -FilePath "verificar_conversion.ps1" -Encoding UTF8

Write-Host "`nüìù Script de verificaci√≥n creado: verificar_conversion.ps1" -ForegroundColor Blue

Write-Host "`nüéØ Pr√≥ximos pasos:" -ForegroundColor Yellow
Write-Host "1. Elige un m√©todo de conversi√≥n de los listados arriba" -ForegroundColor White
Write-Host "2. Ejecuta el m√©todo seleccionado" -ForegroundColor White
Write-Host "3. Verifica los resultados con: .\verificar_conversion.ps1" -ForegroundColor White
Write-Host "4. Los archivos .docx estar√°n en: $outputDir" -ForegroundColor White

# Abrir carpeta de archivos fuente
Write-Host "`nüìÇ Abriendo carpeta de archivos fuente..." -ForegroundColor Blue
Start-Process explorer.exe -ArgumentList (Resolve-Path $sourceDir)









